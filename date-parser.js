// Generated by CoffeeScript 1.8.0
(function() {
  var DateParser;

  DateParser = {
    LOCALES: {
      'zh-TW': require("./lib/zh-TW")
    },
    DEFAULT_LOCALE: 'zh-TW',
    DEFAULT_TIMEZONE: 'Asia/Taipei',
    locale: function(locale) {
      var _ref;
      if (this.LOCALES[locale]) {
        this.DEFAULT_LOCALE = locale;
        return (_ref = this.LOCALES[locale].testStrings) != null ? _ref.forEach((function(_this) {
          return function(s) {
            return _this.parse(s);
          };
        })(this)) : void 0;
      } else {
        return console.error("No such locale: " + locale);
      }
    },
    timezone: function(timezone) {
      var DEFAULT_TIMEZONE;
      return DEFAULT_TIMEZONE = parseInt(timezone);
    },
    parse: function(text, timezone, locale) {
      var expression, expressions, result, _i, _len, _ref, _ref1;
      if (!text) {
        text = '';
      }
      if (!locale) {
        locale = this.DEFAULT_LOCALE;
      }
      if (!timezone) {
        timezone = this.DEFAULT_TIMEZONE;
      }
      expressions = (_ref = this.LOCALES[locale]) != null ? _ref.expressions : void 0;
      if (!expressions) {
        console.error("No such locale: " + locale);
        return null;
      }
      _ref1 = this.LOCALES[locale].expressions;
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        expression = _ref1[_i];
        result = expression(text, timezone);
        if (result) {
          return result;
        }
      }
      return null;
    },
    number2integer: function(text, locale) {
      var _ref;
      if (!text) {
        text = '';
      }
      if (!locale) {
        locale = this.DEFAULT_LOCALE;
      }
      return (_ref = this.LOCALES[locale]) != null ? typeof _ref.number2integer === "function" ? _ref.number2integer(text) : void 0 : void 0;
    },
    time2object: function(text, locale) {
      var _ref;
      if (!text) {
        text = '';
      }
      if (!locale) {
        locale = this.DEFAULT_LOCALE;
      }
      return (_ref = this.LOCALES[locale]) != null ? typeof _ref.time2object === "function" ? _ref.time2object(text) : void 0 : void 0;
    },
    dayTime2moment: function(text, locale) {
      var _ref;
      if (!text) {
        text = '';
      }
      if (!locale) {
        locale = this.DEFAULT_LOCALE;
      }
      return (_ref = this.LOCALES[locale]) != null ? typeof _ref.dayTime2moment === "function" ? _ref.dayTime2moment(text) : void 0 : void 0;
    },
    date2object: function(text, locale) {
      var _ref;
      if (!text) {
        text = '';
      }
      if (!locale) {
        locale = this.DEFAULT_LOCALE;
      }
      return (_ref = this.LOCALES[locale]) != null ? typeof _ref.date2object === "function" ? _ref.date2object(text) : void 0 : void 0;
    },
    dateExpression2moment: function(text, locale) {
      var _ref;
      if (!text) {
        text = '';
      }
      if (!locale) {
        locale = this.DEFAULT_LOCALE;
      }
      return (_ref = this.LOCALES[locale]) != null ? typeof _ref.dateExpression2moment === "function" ? _ref.dateExpression2moment(text) : void 0 : void 0;
    }
  };

  DateParser.locale('zh-TW');

  module.exports = DateParser;

}).call(this);
